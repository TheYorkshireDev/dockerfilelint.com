# Build using lightweight docker in docker image
image: theyorkshiredev/docker-slim:latest

# Since we building docker images within a docker container we need the
# docker in docker service.
services:
  - docker:dind

stages:
  - build
  - test

# Some variables used within the pipeline
before_script:
  - export CI_COMMIT_SHA_SHORT=${CI_COMMIT_SHA:0:8}
  - export COMMIT_RELEASE_IMAGE=$( echo $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA_SHORT | tr '[:upper:]' '[:lower:]' )
  - export COMMIT_DEVELOPMENT_IMAGE=$( echo $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA_SHORT | tr '[:upper:]' '[:lower:]' )-dev
  - export TAGGED_IMAGE=$( echo $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_TAG | tr '[:upper:]' '[:lower:]' )

# Group Docker login commands
.log_into_docker : &log_into_docker |
  docker info
  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# Build dockerfilelint.com with the development profile using make
build_host_dev:
  image: node:9.3.0
  stage: build
  script:
    - "[ ! -d dist ] && echo 'dist directory not found which is expected'"
    - npm install -g grunt-cli babel
    - make deps
    - make build
    - "[ -d dist ] && echo 'dist directory found which is expected after make'"

# Build dockerfilelint.com with the release profile using make
build_host_release:
  image: node:9.3.0
  stage: build
  script:
    - "[ ! -d dist ] && echo 'dist directory not found which is expected'"
    - npm install -g grunt-cli babel
    - make deps
    - make release
    - "[ -d dist ] && echo 'dist directory found which is expected after make'"

# Lint our Dockerfile
lint_dockerfile:
  image: theyorkshiredev/dockerfile-linter:latest
  stage: test
  script:
    - dockerfilelint Dockerfile
